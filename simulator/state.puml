


/'

_validFile 
_validInputString;

enum class RunControlState : int {
   AtStart = 0,
   ValidTM,
   ValidString,
   Ready,
   Paused,
   Running,
   SingleStep,
   HaltAccept,
   HaltFailed
}; // end enum

enum class TmStatus : int {
   Uninitialized,         // before valid file and valid input 
   Ready,                 // awaiting user run or step 
   InProgress,            // after first step and not halt
   HaltOnNoTransition,    // halt accept
   AcceptedOnFinalState,  // halt accept
   HaltOnNonFinalState,   // halt accept
   InvalidLeftMove,       // halt failed
   InvalidRightMove,      // halt failed
   SomethingWentWrong     // remove and just use switch/case default instead
}; // end enum

'/
@startuml GUI Button Enables


[*] --> SetTm 
SetTm --> SetString : eSelectTmBtn [validFile]
SetTm : on_entry: \nSelectTmBtn active  

SetString : on_entry: \nSetInputBtn active  

SetString --> Paused : eSetInputBtn [validString]
Paused --> Running : eRunBtn [inProgress] 
Paused : on_entry: \nRunBtn active \nStepForwardBtn active \nSaveComputationBtn active \nif hasHistory then \n  RewindBtn active \n  StepBackwardBtn active 

Paused --> Paused : eStepForwardBtn \n[inProgress]
Paused --> Halt : eStepForwardBtn [halt]
Paused --> Paused : eStepBackwardBtn
Paused --> Paused : eRewindBtn

Running --> Paused : ePauseBtn [inProgress]
Running --> Running : eLoop [inProgress]
Running --> Halt : eHalt [halt]
Running : on_entry: \nPauseBtn active 

Halt : on_entry: \nRewind active \nStepbackwardBtn active \nSaveComputationBtn active

Halt --> Paused : eRewindBtn
Halt --> Paused : eStepBackwardBtn

@enduml
